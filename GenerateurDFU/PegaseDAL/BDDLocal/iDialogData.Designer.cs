//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace JAY.DAL.BDDLocal
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class iDialogDataEntities : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet iDialogDataEntities à l'aide de la chaîne de connexion trouvée dans la section 'iDialogDataEntities' du fichier de configuration d'application.
        /// </summary>
        public iDialogDataEntities() : base("name=iDialogDataEntities", "iDialogDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet iDialogDataEntities.
        /// </summary>
        public iDialogDataEntities(string connectionString) : base(connectionString, "iDialogDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet iDialogDataEntities.
        /// </summary>
        public iDialogDataEntities(EntityConnection connection) : base(connection, "iDialogDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<ProjectDetail> ProjectDetail
        {
            get
            {
                if ((_ProjectDetail == null))
                {
                    _ProjectDetail = base.CreateObjectSet<ProjectDetail>("ProjectDetail");
                }
                return _ProjectDetail;
            }
        }
        private ObjectSet<ProjectDetail> _ProjectDetail;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Projects> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Projects>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Projects> _Projects;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<SIMProject> SIMProject
        {
            get
            {
                if ((_SIMProject == null))
                {
                    _SIMProject = base.CreateObjectSet<SIMProject>("SIMProject");
                }
                return _SIMProject;
            }
        }
        private ObjectSet<SIMProject> _SIMProject;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet ProjectDetail. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToProjectDetail(ProjectDetail projectDetail)
        {
            base.AddObject("ProjectDetail", projectDetail);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Projects. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToProjects(Projects projects)
        {
            base.AddObject("Projects", projects);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet SIMProject. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToSIMProject(SIMProject sIMProject)
        {
            base.AddObject("SIMProject", sIMProject);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JAY.DAL", Name="ProjectDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDetail : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet ProjectDetail.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété Id.</param>
        /// <param name="idProject">Valeur initiale de la propriété IdProject.</param>
        /// <param name="version">Valeur initiale de la propriété Version.</param>
        /// <param name="evolution">Valeur initiale de la propriété Evolution.</param>
        /// <param name="nomIDialog">Valeur initiale de la propriété NomIDialog.</param>
        /// <param name="obsolete">Valeur initiale de la propriété Obsolete.</param>
        public static ProjectDetail CreateProjectDetail(global::System.Int32 id, global::System.Int32 idProject, global::System.Int32 version, global::System.String evolution, global::System.String nomIDialog, global::System.Boolean obsolete)
        {
            ProjectDetail projectDetail = new ProjectDetail();
            projectDetail.Id = id;
            projectDetail.IdProject = idProject;
            projectDetail.Version = version;
            projectDetail.Evolution = evolution;
            projectDetail.NomIDialog = nomIDialog;
            projectDetail.Obsolete = obsolete;
            return projectDetail;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProject
        {
            get
            {
                return _IdProject;
            }
            set
            {
                OnIdProjectChanging(value);
                ReportPropertyChanging("IdProject");
                _IdProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProject");
                OnIdProjectChanged();
            }
        }
        private global::System.Int32 _IdProject;
        partial void OnIdProjectChanging(global::System.Int32 value);
        partial void OnIdProjectChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Evolution
        {
            get
            {
                return _Evolution;
            }
            set
            {
                OnEvolutionChanging(value);
                ReportPropertyChanging("Evolution");
                _Evolution = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Evolution");
                OnEvolutionChanged();
            }
        }
        private global::System.String _Evolution;
        partial void OnEvolutionChanging(global::System.String value);
        partial void OnEvolutionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomIDialog
        {
            get
            {
                return _NomIDialog;
            }
            set
            {
                OnNomIDialogChanging(value);
                ReportPropertyChanging("NomIDialog");
                _NomIDialog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NomIDialog");
                OnNomIDialogChanged();
            }
        }
        private global::System.String _NomIDialog;
        partial void OnNomIDialogChanging(global::System.String value);
        partial void OnNomIDialogChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Obsolete
        {
            get
            {
                return _Obsolete;
            }
            set
            {
                OnObsoleteChanging(value);
                ReportPropertyChanging("Obsolete");
                _Obsolete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Obsolete");
                OnObsoleteChanged();
            }
        }
        private global::System.Boolean _Obsolete;
        partial void OnObsoleteChanging(global::System.Boolean value);
        partial void OnObsoleteChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreation;
        partial void OnDateCreationChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JAY.DAL", Name="Projects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Projects : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Projects.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété Id.</param>
        /// <param name="projectName">Valeur initiale de la propriété ProjectName.</param>
        /// <param name="mOType">Valeur initiale de la propriété MOType.</param>
        /// <param name="mTType">Valeur initiale de la propriété MTType.</param>
        public static Projects CreateProjects(global::System.Int32 id, global::System.String projectName, global::System.String mOType, global::System.String mTType)
        {
            Projects projects = new Projects();
            projects.Id = id;
            projects.ProjectName = projectName;
            projects.MOType = mOType;
            projects.MTType = mTType;
            return projects;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MOType
        {
            get
            {
                return _MOType;
            }
            set
            {
                OnMOTypeChanging(value);
                ReportPropertyChanging("MOType");
                _MOType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MOType");
                OnMOTypeChanged();
            }
        }
        private global::System.String _MOType;
        partial void OnMOTypeChanging(global::System.String value);
        partial void OnMOTypeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MTType
        {
            get
            {
                return _MTType;
            }
            set
            {
                OnMTTypeChanging(value);
                ReportPropertyChanging("MTType");
                _MTType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MTType");
                OnMTTypeChanged();
            }
        }
        private global::System.String _MTType;
        partial void OnMTTypeChanging(global::System.String value);
        partial void OnMTTypeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserProjectName
        {
            get
            {
                return _UserProjectName;
            }
            set
            {
                OnUserProjectNameChanging(value);
                ReportPropertyChanging("UserProjectName");
                _UserProjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserProjectName");
                OnUserProjectNameChanged();
            }
        }
        private global::System.String _UserProjectName;
        partial void OnUserProjectNameChanging(global::System.String value);
        partial void OnUserProjectNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JAY.DAL", Name="SIMProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SIMProject : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet SIMProject.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété Id.</param>
        /// <param name="idProject">Valeur initiale de la propriété IdProject.</param>
        /// <param name="version">Valeur initiale de la propriété Version.</param>
        /// <param name="evolution">Valeur initiale de la propriété Evolution.</param>
        /// <param name="nomIDialog">Valeur initiale de la propriété NomIDialog.</param>
        /// <param name="obsolete">Valeur initiale de la propriété Obsolete.</param>
        /// <param name="idMT">Valeur initiale de la propriété IdMT.</param>
        /// <param name="idMO">Valeur initiale de la propriété IdMO.</param>
        /// <param name="date">Valeur initiale de la propriété Date.</param>
        public static SIMProject CreateSIMProject(global::System.Int32 id, global::System.Int32 idProject, global::System.Int32 version, global::System.String evolution, global::System.String nomIDialog, global::System.Boolean obsolete, global::System.String idMT, global::System.String idMO, global::System.DateTime date)
        {
            SIMProject sIMProject = new SIMProject();
            sIMProject.Id = id;
            sIMProject.IdProject = idProject;
            sIMProject.Version = version;
            sIMProject.Evolution = evolution;
            sIMProject.NomIDialog = nomIDialog;
            sIMProject.Obsolete = obsolete;
            sIMProject.IdMT = idMT;
            sIMProject.IdMO = idMO;
            sIMProject.Date = date;
            return sIMProject;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProject
        {
            get
            {
                return _IdProject;
            }
            set
            {
                OnIdProjectChanging(value);
                ReportPropertyChanging("IdProject");
                _IdProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProject");
                OnIdProjectChanged();
            }
        }
        private global::System.Int32 _IdProject;
        partial void OnIdProjectChanging(global::System.Int32 value);
        partial void OnIdProjectChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Evolution
        {
            get
            {
                return _Evolution;
            }
            set
            {
                OnEvolutionChanging(value);
                ReportPropertyChanging("Evolution");
                _Evolution = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Evolution");
                OnEvolutionChanged();
            }
        }
        private global::System.String _Evolution;
        partial void OnEvolutionChanging(global::System.String value);
        partial void OnEvolutionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomIDialog
        {
            get
            {
                return _NomIDialog;
            }
            set
            {
                OnNomIDialogChanging(value);
                ReportPropertyChanging("NomIDialog");
                _NomIDialog = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NomIDialog");
                OnNomIDialogChanged();
            }
        }
        private global::System.String _NomIDialog;
        partial void OnNomIDialogChanging(global::System.String value);
        partial void OnNomIDialogChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Obsolete
        {
            get
            {
                return _Obsolete;
            }
            set
            {
                OnObsoleteChanging(value);
                ReportPropertyChanging("Obsolete");
                _Obsolete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Obsolete");
                OnObsoleteChanged();
            }
        }
        private global::System.Boolean _Obsolete;
        partial void OnObsoleteChanging(global::System.Boolean value);
        partial void OnObsoleteChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdMT
        {
            get
            {
                return _IdMT;
            }
            set
            {
                OnIdMTChanging(value);
                ReportPropertyChanging("IdMT");
                _IdMT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdMT");
                OnIdMTChanged();
            }
        }
        private global::System.String _IdMT;
        partial void OnIdMTChanging(global::System.String value);
        partial void OnIdMTChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdMO
        {
            get
            {
                return _IdMO;
            }
            set
            {
                OnIdMOChanging(value);
                ReportPropertyChanging("IdMO");
                _IdMO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdMO");
                OnIdMOChanged();
            }
        }
        private global::System.String _IdMO;
        partial void OnIdMOChanging(global::System.String value);
        partial void OnIdMOChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdSIM
        {
            get
            {
                return _IdSIM;
            }
            set
            {
                OnIdSIMChanging(value);
                ReportPropertyChanging("IdSIM");
                _IdSIM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdSIM");
                OnIdSIMChanged();
            }
        }
        private global::System.String _IdSIM;
        partial void OnIdSIMChanging(global::System.String value);
        partial void OnIdSIMChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MOType
        {
            get
            {
                return _MOType;
            }
            set
            {
                OnMOTypeChanging(value);
                ReportPropertyChanging("MOType");
                _MOType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MOType");
                OnMOTypeChanged();
            }
        }
        private global::System.String _MOType;
        partial void OnMOTypeChanging(global::System.String value);
        partial void OnMOTypeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MTType
        {
            get
            {
                return _MTType;
            }
            set
            {
                OnMTTypeChanging(value);
                ReportPropertyChanging("MTType");
                _MTType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MTType");
                OnMTTypeChanged();
            }
        }
        private global::System.String _MTType;
        partial void OnMTTypeChanging(global::System.String value);
        partial void OnMTTypeChanged();

        #endregion

    
    }

    #endregion

    
}
