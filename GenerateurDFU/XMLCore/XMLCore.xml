<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>XMLCore</name>
  </assembly>
  <members>
    <member name="N:JAY.XMLCore">
    </member>
    <member name="T:JAY.XMLCore.GroupVariable">
      <summary>
Classe de base d'un groupe de variables</summary>
    </member>
    <member name="M:JAY.XMLCore.GroupVariable.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003A7$SL$$LE$GroupVariable$EL$ class.</summary>
    </member>
    <member name="P:JAY.XMLCore.GroupVariable.Variables">
      <summary>
La liste des variables appartenant à ce groupe</summary>
    </member>
    <member name="P:JAY.XMLCore.GroupVariable.Name">
      <summary>
Le nom du groupe</summary>
    </member>
    <member name="T:JAY.XMLCore.Tools">
      <summary>
Class statics présentant des utilitaires divers</summary>
    </member>
    <member name="M:JAY.XMLCore.Tools.FixFloatStringSeparator(System.String)">
      <summary>
Remplacer le séparateur de la virgule utilisé dans la chaine de charactère transmise par le séparateur de virgule de la culture en cours</summary>
      <returns>
La valeur traduite. Le séparateur de virgule est conformae à celui de la culture en cours</returns>
      <param name="Value">
La valeur initiale. Le séparateur de virgule peut être le point ou la virgule</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertFromASCII2Text(System.String)">
      <summary>
Reconstruit une chaine de caractères décrites par une suite de codes Ascci hexadécimaux avec un séparateur ","</summary>
      <returns>
la chaine de caractères reconstruite</returns>
      <param name="CodeASCII">
la suite des codes hexadécimaux (exemple : 0x31, 0x33x 0x54)</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertFromText2ASCII(System.String)">
      <summary>
Convertir tous les caractères d'une chaine sous la forme d'un code hexadécimal, lettre par lettre</summary>
      <returns>
Le texte converti -&gt; "0x30,0x32,0x50"...</returns>
      <param name="Text">
Le texte à convertir. Par exemple "E06B14"</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertFromStringIEEE_2Float(System.String)">
      <summary>
Convertir une chaine de caractère en float</summary>
      <param name="str">
La chaine de caractères. Elle est de la forme "0x00, 0x30, 0x55, 0x0f"</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertFromfloat_2StringIEEE(System.Single)">
      <summary>
Convertir un float en valeur hexadécimal de chacun des octets</summary>
      <returns>
Une chaine de charactères de la forme : "0x00, 0x30, 0x55, 0x0f"</returns>
      <param name="fv">
la valeur de type float</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertASCCI2Byte(System.String)">
      <summary>
Convertir un texte ASCII en valeur</summary>
      <returns>
Un Byte de la valeur transmise sous forme Hexadécimale</returns>
      <param name="ASCII">
La chaine de caractère portant la valeur. Elle est du format "0xF5" par exemple.</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertByteASCIIByte(System.Byte)">
      <summary>
Convertir un Byte en valeur Hexadécimal sur 8 bytes</summary>
      <returns>
La chaine de charactères hexadécimales correspondante</returns>
      <param name="Value">
La valeur à convertir</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertASCIIToInt16(System.String)">
      <summary>
Convertir un nombre Hexa Ascii en Int16</summary>
      <param name="ASCII">
</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.ConvertInt16ToString(System.Int16)">
      <summary>
Convertir l'Int16 en une chaine de charactères contenant ça chaine Hexa</summary>
      <param name="Value">
</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.GetCorrespondantIntValue(System.String,System.String)">
      <summary>
Methode permettant de retrouver la valeur Int32 d'un paramètre décrit par du texte</summary>
      <returns>
La valeur Int32 correspondant à la valeur textuelle</returns>
      <param name="ListValues">
La liste des valeurs sous la forme : "/absent=0/présent=1"</param>
      <param name="Value">
La valeur textuel dans la liste, par exemple : "absent"</param>
    </member>
    <member name="M:JAY.XMLCore.Tools.GetCorrespondantStringValue(System.String,System.Int32)">
      <summary>
Retrouve la valeur textuel correspondant à la valeur</summary>
      <param name="ListValues">
</param>
      <param name="Value">
</param>
    </member>
    <member name="T:JAY.XMLCore.VariableEditable">
      <summary>
La classe de base de description des variables éditables</summary>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003B7$SL$$LE$VariableEditable$EL$ class.</summary>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.GetCurrentAutorizedValue">
      <summary>
Acquérir le numéro de l'élément de la liste corresondant à la valeur présente dans le xml</summary>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.SetRefXMLVariable(System.Xml.Linq.XElement)">
      <summary>
Assigner la valeur de référence de la variableXML liée</summary>
      <param name="XMLVariable">
</param>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.ParseAutorizedValue(System.String)">
      <summary>
Parse une sélection de type non = 0 et retourne 0</summary>
      <param name="SourceValue">
</param>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.ExecuteCommandBrowse">
      <summary>
La méthode d'exécution de la commande</summary>
    </member>
    <member name="M:JAY.XMLCore.VariableEditable.CanExecuteCommandBrowse">
      <summary>
Vérifie si la commande peut être exécutée</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.BrowseVisibility">
      <summary>
La visibilité de la commande Browse</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.StringValueOfListChoice">
      <summary>
Le valeur textuel sélectionnée dans la liste de choix</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.VarType">
      <summary>
Le type de la variable</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.VarDescription">
      <summary>
La description de la variable</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.ListVisibility">
      <summary>
La visibilité de la liste de choix</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.CommandBrowse">
      <summary>
La commande Browse</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.AutorizedValues">
      <summary>
La liste des valeurs autorisées</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.RefElementMax">
      <summary>
La valeur Max de l'élement XML lié</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.RefElementMin">
      <summary>
La valeur Min de l'élément XML lié</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.RefElementValue">
      <summary>
La valeur de l'élement XML lié</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.XmlPath">
      <summary>
Le chemin XML de la variable</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.IsEditable">
      <summary>
La variable doit-elle être éditable ?</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.NbVariables">
      <summary>
Nombre de variables</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.CurrentAutorizedValue">
      <summary>
La valeur en cours de sélection dans la liste</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.VarName">
      <summary>
Le nom de la variable dans le Xml</summary>
    </member>
    <member name="P:JAY.XMLCore.VariableEditable.VarGroupName">
      <summary>
Le nom de groupe de la variable</summary>
    </member>
    <member name="T:JAY.XMLCore.XML_ATTRIBUTE">
    </member>
    <member name="T:JAY.XMLCore.XML_ERROR">
      <summary>
Code d'erreurs pour la partie IDialog_XML</summary>
    </member>
    <member name="T:JAY.XMLCore.XML_NODE">
    </member>
    <member name="T:JAY.XMLCore.XMLCreation">
      <summary>
Classe de manipulation des fichiers XML, fusion / délession...</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLCreation.#ctor(System.Xml.Linq.XDocument)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003D1$SL$$LE$XMLCreation$EL$ class.</summary>
      <param name="Base">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLCreation.GetFichePack(System.Xml.Linq.XDocument)">
      <summary>
Sélectionner la FichePack du fichier</summary>
      <param name="Source">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLCreation.Add(System.Xml.Linq.XDocument)">
      <summary>
La fusion d'un XDocument à la base en cours</summary>
      <param name="Source">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLCreation.Add(System.Xml.Linq.XNode,System.String)">
      <summary>
La fusion de noeuds en direction du XDocument</summary>
      <param name="N1">
</param>
      <param name="Path">
</param>
    </member>
    <member name="P:JAY.XMLCore.XMLCreation.DocumentXml">
      <summary>
Le document Xml en cours de création</summary>
    </member>
    <member name="T:JAY.XMLCore.XMLLeaf">
    </member>
    <member name="M:JAY.XMLCore.XMLLeaf.#ctor(System.Xml.Linq.XElement,System.Int32)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003D7$SL$$LE$XMLLeaf$EL$ class.</summary>
      <param name="Element">
</param>
      <param name="ParentLevel">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLLeaf.InitListValeur">
      <summary>
Initialiser la liste des valeurs</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLLeaf.InitType">
      <summary>
Initialiser le type de la variable</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Level">
      <summary>
Niveau hiérarchique du noeud</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Value">
      <summary>
La valeur</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Description">
      <summary>
La description du noeud</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.DType">
      <summary>
Le type de la donnée</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.ListValeur">
      <summary>
La liste des valeurs proposées</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Maximum">
      <summary>
La valeur maximum</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.ChildNodes">
      <summary>
Les noeuds enfants du noeud</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Attributes">
      <summary>
La liste des attributs du noeud</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.Minimum">
      <summary>
La valeur Minimum</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.NodeName">
      <summary>
Le nom du noeud en cours d'édition</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLLeaf.IsSelected">
      <summary>
Défini si le noeud actuel est en cours de sélection</summary>
    </member>
    <member name="T:JAY.XMLCore.XMLProcessing">
      <summary>
Classe d'entrée pour la gestion des données XML de IDialog</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.#ctor">
      <summary>
Contructeur. Le chargement du XML est réalisé par ailleur.</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.Close">
      <summary>
Fermer le fichier en cours d'utilisation</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.BuildXMLTree">
      <summary>
Construire l'arbre XML à partir du fichier en cours d'édition</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.OpenXML(System.String)">
      <summary>
Ouvrir un fichier XML</summary>
      <returns>
Un code erreur est retourné. 0x0000 = pas d'erreur</returns>
      <param name="FileName">
Le nom du fichier à charger</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.OpenXML(System.IO.Stream)">
      <summary>
Ouvrir un fichier XML</summary>
      <param name="stream">
Le flux à partir duquel charger le fichier</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.OpenXML(System.Xml.Linq.XElement)">
      <summary>
Initialiser la classe à partir d'un noeud XML</summary>
      <param name="XMLNode">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.SaveXMLAs(System.String)">
      <summary>
Sauve le fichier XML</summary>
      <param name="FileName">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.SaveXML">
      <summary>
Sauve le fichier XML</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.ExtractFirstLevelNode">
      <summary>
La liste des noeuds de premiers niveaux</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.ExtractNode(System.Xml.Linq.XElement)">
      <summary>
Extrait tous les noeuds d'un element donné</summary>
      <returns>
La collection des noeuds</returns>
      <param name="XE">
L'élément à partir du quel les données doivent être modifiée</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.GetNodeByPath(System.String)">
      <summary>
Rechercher le noeud spécifié à partir de la racine en suivant le chemin</summary>
      <returns>
retourne le noeud trouvé, ou bien null si aucun noeud n'a été identifié</returns>
      <param name="Path">
Le chemin du noeud doit être présenté de la façon suivante : Code1/Code2/Code3 ... Code fait référence à l'attribut code de chacune des balises</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.SetValue(System.String,System.String,System.String,System.String,System.String)">
      <summary>
Mettre à jour une valeur d'attribut. Le noeud à modifié est repéré par un chemin d'accès délimité de la façon suivante : 'Code1/Code2' ... d'un attribut de référence ARef spécifiant l'unicité de la ligne et d'une valeur</summary>
      <returns>
true si la valeur a été mise à jour. false sinon.</returns>
      <param name="Path">
Le chemin d'accès du noeud de la forme 'Code1/Code2' ...</param>
      <param name="ARef">
Le nom d'un attribut de référence permettant d'avoir une unicité dans la ligne</param>
      <param name="AValue">
La valeur de l'attribut de référence</param>
      <param name="Attribute">
Le nom de l'attribut à mettre à jour</param>
      <param name="Value">
La valeur de l'attribut à mettre à jour</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.ToString">
      <summary>
La méthode ToString du XMLProcessing</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.GetValue(System.String,System.String,System.String,System.String)">
      <summary>
Lire la valeur de l'attribut spécifié</summary>
      <returns>
retourne la valeur de l'attribut ou null si l'attribut n'a pas été trouvé</returns>
      <param name="Path">
Le chemin d'accès du noeud de la forme 'Code1/Code2' ...</param>
      <param name="ARef">
Le nom d'un attribut de référence permettant d'avoir une unicité dans la ligne</param>
      <param name="AValue">
La valeur de l'attribut de référence</param>
      <param name="Attribute">
Le nom de l'attribut à mettre à jour</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.InsertXElement(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
      <summary>
Insérer un bloc XML à la suite du noeud spécifié</summary>
      <param name="previousNode">
</param>
      <param name="node">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.GetNodesByCode(System.String)">
      <summary>
Recherche les noeuds enfants de ROOT contenant ce code</summary>
      <returns>
Une collection de XElement si des noeuds enfants sont trouvés, null sinon</returns>
      <param name="Code">
Le Code désignant les noeuds</param>
    </member>
    <member name="M:JAY.XMLCore.XMLProcessing.GetNodesByCode(System.String,System.Xml.Linq.XElement)">
      <summary>
Rechercher les noeuds enfants Xml en connaissant la valeur de l'attribut "code"</summary>
      <returns>
Une collection de XElement si des noeuds enfants sont trouvés, null sinon</returns>
      <param name="Code">
Le Code désignant les noeuds</param>
      <param name="Source">
L'Element XML Parent</param>
    </member>
    <member name="P:JAY.XMLCore.XMLProcessing.RootNode">
      <summary>
retourner le noeud racine de l'arbre XML</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLProcessing.FileName">
      <summary>
Le nom du fichier</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLProcessing.XMLTree">
      <summary>
L'arbre XML du fichier</summary>
    </member>
    <member name="T:JAY.XMLCore.XMLTreeView">
      <summary>
Un TreeView permettant de renvoyer des éléments XMLLeaf de XMLCore</summary>
    </member>
    <member name="M:JAY.XMLCore.XMLTreeView.CurrentItemChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
Mettre à jour la propriété de dépendance du control</summary>
      <param name="sender">
</param>
      <param name="e">
</param>
    </member>
    <member name="M:JAY.XMLCore.XMLTreeView.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003FB$SL$$LE$XMLTreeView$EL$ class.</summary>
    </member>
    <member name="P:JAY.XMLCore.XMLTreeView.CurrentItem">
      <summary>
Gets or sets the value of the $LS$topic_00000000000003FE$SL$$LE$CurrentItem$EL$ property. This is a dependency property.</summary>
    </member>
  </members>
</doc>
