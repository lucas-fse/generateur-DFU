
@model GenerateurDFUSafir.Models.CmdEnCours
@{
    ViewBag.Title = "GestionCmd";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link href="~/Content/GestionFPS.css" rel="stylesheet" />
    int i = 0;
}

<h2>GestionCmd</h2>


@using (Html.BeginForm("EditGestionCmd", "STCTCS"))
{
    @Html.AntiForgeryToken()
    <table>
        <tr>
            <td style="width:300px">
                <div style="display: inline">
                    @Html.DropDownListFor(m => m.NameSTC, // Store selected value in Model.DefaultStcId
                     new SelectList(Model.ListOperateursSTC, "Value", "Text", Model.DefaultStcId),
                     new { @class = "form-control", onchange = @"submit();" })
                </div>
            </td>
            <td style="width:300px">
                <div style="display: inline">
                    @Html.DropDownListFor(m => m.NameTCS, // Store selected value in Model.DefaultStcId
                     new SelectList(Model.ListOperateursTCS, "Value", "Text", Model.DefaultTcsId),
                     new { @class = "form-control", onchange = @"submit();" })
                </div>
            </td>
            <td style="width:300px">
                <div style="display: inline">
                    @Html.DropDownListFor(m => m.StatusCmd, // Store selected value in Model.DefaultStcId
                     new SelectList(Model.ListStatusCmd, "Value", "Text", Model.DefaultStatusCmd),
                     new { @class = "form-control", onchange = @"submit();" })
                </div>
            </td>
        </tr>
        
    </table>
}
<div style="overflow:auto; height:900px;">
    <table id="fpstable" class="table">
        <thead id="tableFPS">
            <tr>
                <th id="colCmd" class="col-id-no fixed-header">
                    <div class="box"><div><h4>Nmr Cmd </h4></div><div><img src="~/image/tri.png" style="height:20px; width:auto;" /></div></div>
                </th>
                <th id="colfps">
                    <div class="box"><div><h4>Ligne(s) </h4></div><div><img src="~/image/tri.png" style="height:20px; width:auto;" /></div></div>
                </th>
                <th>
                    <h4>Etat Cmd</h4> 
                </th>
                <th>
                    <h4>STC</h4>
                </th>
                <th>
                    <h4>TCS</h4>
                </th>
                <th>
                    <h4>Item</h4>
                </th>

                <th id="colraison">
                    <div class="box">
                        <div><h4>Raison<br />sociale</h4></div><div><img src="~/image/tri.png" style="height:20px; width:auto;" /></div>
                    </div>
                </th>

                <th>
                    <div style="width: 120px;">
                        <div><h5>St:Date Cmd<br /></h5></div>
                        <div>
                            <h5>Cl:Date Client<br /></h5>
                        </div>
                        <div>
                            <h5>Ex:Date Expe<br /></h5>
                        </div>
                        <div><h5>Us:Date stc<br /></h5></div>
                    </div>
                </th>

                <!--<th>
        <h4>Date<br />demandée<br />(départ usine)</h4>
    </th> -->
                <th>
                    <h4>Erreurs</h4>
                </th>
               
                <th>
                    <h4>Status</h4>
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var ligne in Model.ListCmdAll)
            {
            <tr style="background-color:@ligne.CodeCouleurLigne">
                <td class="col-id-no">
                    <div style="max-width: 100px;">
                        @Html.Label(ligne.SOHNUM)
                    </div>
                </td>
                <td class="col-id-no">
                    <div style="max-width: 100px;">
                        @foreach (var soplin in ligne.SOPLIN)
                        {
                        @Html.Label(soplin)<br/>
                        }
                    </div>
                </td>
                <td class="col-id-no">
                    <div style="max-width: 100px;">
                        @Html.Label(ligne.StatusCmd)
                    </div>
                </td>
                <td>
                    @using (Html.BeginForm("EditGestionFPS", "STCTCS"))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="NameSTC" value="@Model.NameSTC" idstc="@Model.NameSTC" />
                        <input type="hidden" name="NameTCS" value="@Model.NameTCS" idtcs="@Model.NameTCS" />
                        <input type="hidden" name="StatusViewFps" value="@ligne.STATUS" />
                        <input type="hidden" name="FormTRACACMD.IndexCMD" value="@ligne.IndexCMD" />
                        <input type="hidden" name="FormTRACACMD.SOHNUM" value="@ligne.SOHNUM" />
                        <input type="hidden" name="FormTRACACMD.SOPLIN" value="@ligne.SOPLIN" />
                        <div style="width: 90px;">
                            @Html.Label(ligne.STCEnCharge)
                        </div>
                    }
                </td>
                <td>
                    @using (Html.BeginForm("EditGestionFPS", "STCTCS"))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="NameSTC" value="@Model.NameSTC" idstc="@Model.NameSTC" />
                        <input type="hidden" name="NameTCS" value="@Model.NameTCS" idtcs="@Model.NameTCS" />
                        <input type="hidden" name="StatusViewFps" value="@ligne.STATUS" />
                        <input type="hidden" name="FormTRACACMD.IndexCMD" value="@ligne.IndexCMD" />
                        <input type="hidden" name="FormTRACACMD.SOHNUM" value="@ligne.SOHNUM" />
                        <input type="hidden" name="FormTRACACMD.SOPLIN" value="@ligne.SOPLIN" />
                        <div style="width: 90px;">

                            @Html.Label(ligne.TCSORIG)

                        </div>
                    }
                </td>

                <td>
                    @foreach (var produit in ligne.PRODUIT)
                    {
                    @Html.Label(produit)<br/>
                    }
                </td>

                <td>
                    @Html.Label(@ligne.NomClient.Replace('.', ' '))
                </td>
                <td>
                    <div>@Html.Label("St:" + ((DateTime)ligne.CREDAT_0).ToShortDateString())</div>
                    <div>
                        @Html.Label("Cl:" + ((DateTime)ligne.DEMDLVDAT_0).ToShortDateString())
                    </div>
                    <div>
                        @Html.Label("Ex:" + ((DateTime)ligne.SHIDAT).ToShortDateString())
                    </div>
                    <div>

                        @Html.Label("Us:" + ((DateTime)ligne.test).ToString("dd/MM/yyyy"));

                    </div>

                </td>
                @if (ligne.ErreurString.Contains("Pas d'erreur sur la commande"))
                {
                    <td style="background-color:#34C924">
                        <div>
                            @Html.Label(ligne.ErreurString.ToString(), new { @style = "margin-top:0px;display:inline-block;white-space: pre-wrap;" })
                        </div>
                    </td>
                }
                else
                {
                    <td style="background-color:@ligne.ErreurStringCouleur">
                        <div>
                            @Html.Label(ligne.ErreurString.ToString(), new { @style = "margin-top:0px;display:inline-block;white-space: pre-wrap;" })
                        </div>
                    </td>
                }
                <td>
                    <div style="width: 100px;">
                        @using (Html.BeginForm("EditGestionCmd", "STCTCS"))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="NameSTC" value="@Model.NameSTC" idstc="@Model.NameSTC" />
                            <input type="hidden" name="NameTCS" value="@Model.NameTCS" idtcs="@Model.NameTCS" />
                            <input type="hidden" name="FormTRACACMD.IndexCMD" value="@ligne.IndexCMD" />
                            <input type="hidden" name="FormTRACACMD.SOHNUM" value="@ligne.SOHNUM" />
                            <input type="hidden" name="FormTRACACMD.SOPLIN" value="@ligne.SOPLIN" />
                            <input type="hidden" name="FormTRACACMD.TypeData" value="@ligne.TypeData" />

                            @Html.Label(ligne.STATUSString)


                        }
                    </div>
                </td>
            </tr>
            
                
           
                i++;
            }
        </tbody>
    </table>
</div>
<div id="fondTransparent"></div>
<div id="PopUpAddCommentaire">
    @using (Html.BeginForm("EditGestionFPS", "STCTCS"))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="AddCommentaire" value="" id="AddCommentaire" />
        <input type="hidden" name="NameSTC" value="@Model.NameSTC" />
        <input type="hidden" name="NameTCS" value="@Model.NameTCS" />
        <input type="hidden" name="FormTRACACMD.IndexCMD" value="" id="PopUpAddCommentaireindexcmd" />

        <div class="bandeau">
            <h2>Modifier le commentaire</h2>
            <h3>longueur maximum de 500 charactéres</h3>
        </div>
        <div id="ArretOFBody">
            <div id="AjoutCommentaireSpe" class="GrisClair oublie" style=" width:100%;height:100%">
                <textarea id="CommentaireSpe" name="CommentaireSpe" maxlength="500" style="max-width:1000px; width:100%;font-size:20px; height:250px;"></textarea>
            </div>
            <div class="ValidationBttn GrisClair">
                <input id="Valider" type="submit" value="Valider" />
                <input id="Annuler" type="button" value="Annuler" onclick="AnnulerPopUp('PopUpAddCommentaire')" />
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>
    function AddCommentaire(id,indexcmd,commentaire) {

        document.getElementById(id).style.transform = "translate(-50%, -50%) scale(1)";
        document.getElementById(id).style.bottom = "0px";
        document.getElementById(id).style.height = "450px";
        document.getElementById("fondTransparent").style.opacity = 1;
        document.getElementById("fondTransparent").style.pointerEvents = "all";
        document.getElementById("PopUpAddCommentaireindexcmd").value = indexcmd;
        document.getElementById("CommentaireSpe").value = commentaire;
    }
    function AnnulerPopUp(id) {

        document.getElementById("fondTransparent").style.opacity = 0;
        document.getElementById("fondTransparent").style.pointerEvents = "none";
        document.getElementById(id).style.transform = "translate(-50%, -50%) scale(0)";
    }
    function callChangefunc(val, status) {
        window.location.href = "/STCTCS/GestionFPS/" + val;
    }
    function SetTime(value) {
        window.location.href = "/STCTCS/GestionFPS/" + value;
    }

    function sortTable(f, n) {
        var rows = $('#fpstable tbody  tr').get();
        rows.sort(function (a, b) {

            var A = getVal(a);
            var B = getVal(b);

            if (A < B) {
                return -1 * f;
            }
            if (A > B) {
                return 1 * f;
            }
            return 0;
        });

        function getVal(elm) {
            var v = $(elm).children('td').eq(n).text().toUpperCase();
            if ($.isNumeric(v)) {
                v = parseInt(v, 10);
            }
            return v;
        }

        $.each(rows, function (index, row) {
            var color;
            if (index % 3 == 0) { color = '#F4A460'; }
            else if (index % 3 == 1) { color = '#FFE4C4'; }
            else { color = '#00FFFF'; }
            row.style.backgroundColor = color;
            $('#fpstable').children('tbody').append(row);
        });

    }

    var f_cmd = 1;
    var f_fps = 1;
    var f_client = 1;

    $('#colCmd').click(function () {
        f_cmd *= -1;
        var n = $(this).prevAll().length;
        sortTable(f_cmd, n);
    });
    $("#colfps").click(function () {
        f_fps *= -1;
        var n = $(this).prevAll().length;
        sortTable(f_fps, n);
    });
    $("#colraison").click(function () {
        f_client *= -1;
        var n = $(this).prevAll().length;
        sortTable(f_client, n);
    });

    redirect(); //Appel de la fonction

    //Code de la Fonction
    function redirect() {
        var strinchemin = location.href.substring(0, location.href.lastIndexOf("/") + 1);
        //var Viewname = location.href.substring(location.href.lastIndexOf("/") + 1, location.href.length);
        //strinchemin += "ReloadTimer?id=" + Viewname;
        console.log(location.href);
        @if (Model.RechargementCourt)
        {
            <text>
                setTimeout("document.location = \'" + location.href + "'", 3000); // 5 min
            </text>
        }
        else
        {
            <text>
                setTimeout("document.location = \'" + location.href + "'", 300000); // 5 min
            </text>
        }
        //setTimeout("document.location = 'production/Test/production'" , 6000); //6s
        }

</script>
